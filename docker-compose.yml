version: "3.9"

services:
  db:
    image: postgres:latest
    container_name: db
    volumes:
      - postgres_storage:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    depends_on:
      - db
    container_name: keycloak
    env_file:
      - ./.env
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --import-realm
    ports:
      - "8080:8080"

  web:
    build:
      dockerfile: ./Dockerfile
      context: ./
    container_name: web
    depends_on:
      - db
      - minio
      - keycloak
    volumes:
      - static_volume:/project/static
      - media_volume:/project/media
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: >
      bash -c "./manage.py collectstatic --noinput 
      && gunicorn -b 0.0.0.0:8000 project.wsgi:application"

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - static_storage:/data
    environment:
      - "MINIO_ROOT_USER=user"
      - "MINIO_ROOT_PASSWORD=password"
    command: server /data --console-address 0.0.0.0:9001

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 s3 http://minio:9000 user password;
      /usr/bin/mc mb s3/static/;
      /usr/bin/mc anonymous set download s3/static;
      "

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: nginx
    env_file:
      - ./.env
    volumes:
      - static_volume:/project/static
      - media_volume:/project/media
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
      - "443:443"

volumes:
  static_volume:
  media_volume:
  static_storage:
  postgres_storage:
